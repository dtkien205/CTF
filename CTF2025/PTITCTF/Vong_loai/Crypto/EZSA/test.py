from math import gcd
from Crypto.Util.number import long_to_bytes

n = 17214567828398357229643529894295967114363352499098802199894858334085293863341825287910906544494493686384112698195095225053385794088973371397323458418321666327675916513230636104793989067797717706445529776600856609707677648913780791946460982977782195356212507182820036214949481940068433039225015414875241777158003325764872405881572570496190679493447373849996319019598102288666420853150415056950485849279575818156402816776191856047427152544999688568950736168425290093518129670058413768478973322477524419171082000819854631108321230234176824271796110603234303082618740389203049873976008473621649321173853688102041285596241
e = 15440488000729211957610279418931605805589654711493356743965905209276145425852849809312888310379272967334598801649810510348697070096535739532036297540403392167171881768067441561508337590880822861672290233186985387034942614188538085229808917257385229318625614290922403715134153580735609069998947227062942174142730151517393242131507391704997064499542165892278559404838406852685645008075214053882374401792242411576641746065438480381248624838670256786822650763564060448021994952508633074390074128374060992679707236024844673099693214372403996970791536012149996254474491705964926081420031667815035866895342358734670639887169
c = 2402138959153051396320943729277461170773667922351093944074722376521237389464692434251911375749083878511997619061766771696998680583640661543963425049461931196141770452130968180714299528148635742852818728071800606030028670445222713727143968250556737720752366932414925949892158179243847407401643660893432149798496795739805059615071574403567868520336932612028074092301976357005203460281680124320522122292074540003162762559783225589480645595685851382155354113399084178162200670604735886151583943618933977027880216736502657283592205972435022183995754583696686836691748834990167700258559540373094124937235886762980711070096

t = e - 1

def find_p(n, t):
    for a in [2, 3, 5, 7, 11, 13, 17, 19, 23, 29]:
        g = gcd(pow(a, t, n) - 1, n)
        if 1 < g < n:
            return g
    raise ValueError("Chưa tách được n; thử thêm cơ sở ngẫu nhiên.")

p = find_p(n, t)
q = n // p

# d chính là p theo đề
d = p

m = pow(c, d, n)
print(long_to_bytes(m))
